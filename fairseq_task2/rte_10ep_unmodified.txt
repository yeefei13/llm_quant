{'_name': None, 'common': {'_name': None, 'no_progress_bar': False, 'log_interval': 200, 'log_format': json, 'log_file': None, 'aim_repo': None, 'aim_run_hash': None, 'tensorboard_logdir': None, 'wandb_project': None, 'azureml_logging': False, 'seed': 1, 'cpu': False, 'tpu': False, 'bf16': False, 'memory_efficient_bf16': False, 'fp16': True, 'memory_efficient_fp16': False, 'fp16_no_flatten_grads': False, 'fp16_init_scale': 4, 'fp16_scale_window': 128, 'fp16_scale_tolerance': 0.0, 'on_cpu_convert_precision': False, 'min_loss_scale': 0.0001, 'threshold_loss_scale': 1.0, 'amp': False, 'amp_batch_retries': 2, 'amp_init_scale': 128, 'amp_scale_window': None, 'user_dir': None, 'empty_cache_freq': 0, 'all_gather_list_size': 16384, 'model_parallel_size': 1, 'quantization_config_path': None, 'profile': False, 'reset_logging': False, 'suppress_crashes': False, 'use_plasma_view': False, 'plasma_path': '/tmp/plasma'}, 'common_eval': {'_name': None, 'path': None, 'post_process': None, 'quiet': False, 'model_overrides': '{}', 'results_path': None}, 'distributed_training': {'_name': None, 'distributed_world_size': 1, 'distributed_num_procs': 1, 'distributed_rank': 0, 'distributed_backend': 'nccl', 'distributed_init_method': None, 'distributed_port': -1, 'device_id': 0, 'distributed_no_spawn': False, 'ddp_backend': pytorch_ddp, 'ddp_comm_hook': none, 'bucket_cap_mb': 25, 'fix_batches_to_gpus': False, 'find_unused_parameters': True, 'gradient_as_bucket_view': False, 'fast_stat_sync': False, 'heartbeat_timeout': -1, 'broadcast_buffers': False, 'slowmo_momentum': None, 'slowmo_base_algorithm': 'localsgd', 'localsgd_frequency': 3, 'nprocs_per_node': 1, 'pipeline_model_parallel': False, 'pipeline_balance': None, 'pipeline_devices': None, 'pipeline_chunks': 0, 'pipeline_encoder_balance': None, 'pipeline_encoder_devices': None, 'pipeline_decoder_balance': None, 'pipeline_decoder_devices': None, 'pipeline_checkpoint': never, 'zero_sharding': none, 'fp16': '${common.fp16}', 'memory_efficient_fp16': '${common.memory_efficient_fp16}', 'tpu': '${common.tpu}', 'no_reshard_after_forward': False, 'fp32_reduce_scatter': False, 'cpu_offload': False, 'use_sharded_state': False, 'not_fsdp_flatten_parameters': False}, 'dataset': {'_name': None, 'num_workers': 1, 'skip_invalid_size_inputs_valid_test': False, 'max_tokens': 4400, 'batch_size': 16, 'required_batch_size_multiple': 1, 'required_seq_len_multiple': 1, 'dataset_impl': None, 'data_buffer_size': 10, 'train_subset': 'train', 'valid_subset': 'valid', 'combine_valid_subsets': None, 'ignore_unused_valid_subsets': False, 'validate_interval': 1, 'validate_interval_updates': 0, 'validate_after_updates': 0, 'fixed_validation_seed': None, 'disable_validation': False, 'max_tokens_valid': '${dataset.max_tokens}', 'batch_size_valid': '${dataset.batch_size}', 'max_valid_steps': None, 'curriculum': 0, 'gen_subset': 'test', 'num_shards': 1, 'shard_id': 0, 'grouped_shuffling': False, 'update_epoch_batch_itr': '${dataset.grouped_shuffling}', 'update_ordered_indices_seed': False}, 'optimization': {'_name': None, 'max_epoch': 10, 'max_update': 2036, 'stop_time_hours': 0.0, 'clip_norm': 0.0, 'sentence_avg': False, 'update_freq': [1], 'lr': [2e-05], 'stop_min_lr': -1.0, 'use_bmuf': False, 'skip_remainder_batch': False, 'debug_param_names': False}, 'checkpoint': {'_name': None, 'save_dir': 'checkpoints', 'restore_file': '/mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/roberta.base/model.pt', 'continue_once': None, 'finetune_from_model': None, 'reset_dataloader': True, 'reset_lr_scheduler': False, 'reset_meters': True, 'reset_optimizer': True, 'optimizer_overrides': '{}', 'save_interval': 1, 'save_interval_updates': 0, 'keep_interval_updates': -1, 'keep_interval_updates_pattern': -1, 'keep_last_epochs': -1, 'keep_best_checkpoints': -1, 'no_save': False, 'no_epoch_checkpoints': True, 'no_last_checkpoints': False, 'no_save_optimizer_state': False, 'best_checkpoint_metric': 'accuracy', 'maximize_best_checkpoint_metric': True, 'patience': -1, 'checkpoint_suffix': '', 'checkpoint_shard_count': 1, 'load_checkpoint_on_all_dp_ranks': False, 'write_checkpoints_asynchronously': False, 'model_parallel_size': '${common.model_parallel_size}'}, 'bmuf': {'_name': None, 'block_lr': 1.0, 'block_momentum': 0.875, 'global_sync_iter': 50, 'warmup_iterations': 500, 'use_nbm': False, 'average_sync': False, 'distributed_world_size': '${distributed_training.distributed_world_size}'}, 'generation': {'_name': None, 'beam': 5, 'beam_mt': 0, 'nbest': 1, 'max_len_a': 0.0, 'max_len_b': 200, 'max_len_a_mt': 0.0, 'max_len_b_mt': 200, 'min_len': 1, 'match_source_len': False, 'unnormalized': False, 'no_early_stop': False, 'no_beamable_mm': False, 'lenpen': 1.0, 'lenpen_mt': 1.0, 'unkpen': 0.0, 'replace_unk': None, 'sacrebleu': False, 'score_reference': False, 'prefix_size': 0, 'no_repeat_ngram_size': 0, 'sampling': False, 'sampling_topk': -1, 'sampling_topp': -1.0, 'constraints': None, 'temperature': 1.0, 'diverse_beam_groups': -1, 'diverse_beam_strength': 0.5, 'diversity_rate': -1.0, 'print_alignment': None, 'print_step': False, 'lm_path': None, 'lm_weight': 0.0, 'iter_decode_eos_penalty': 0.0, 'iter_decode_max_iter': 10, 'iter_decode_force_max_iter': False, 'iter_decode_with_beam': 1, 'iter_decode_with_external_reranker': False, 'retain_iter_history': False, 'retain_dropout': False, 'retain_dropout_modules': None, 'decoding_format': None, 'no_seed_provided': False, 'eos_token': None}, 'eval_lm': {'_name': None, 'output_word_probs': False, 'output_word_stats': False, 'context_window': 0, 'softmax_batch': 9223372036854775807}, 'interactive': {'_name': None, 'buffer_size': 0, 'input': '-'}, 'model': {'_name': 'roberta', 'dropout': 0.1, 'attention_dropout': 0.1}, 'task': {'_name': 'sentence_prediction', 'data': '/mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/RTE-bin', 'num_classes': 2, 'init_token': 0, 'separator_token': 2, 'no_shuffle': False, 'shorten_method': none, 'shorten_data_split_list': '', 'add_prev_output_tokens': False, 'max_positions': 512, 'regression_target': '${criterion.regression_target}', 'classification_head_name': '${criterion.classification_head_name}', 'seed': '${common.seed}', 'd2v2_multi': False}, 'criterion': {'_name': 'sentence_prediction', 'classification_head_name': 'sentence_classification_head', 'regression_target': False, 'report_mcc': False, 'report_acc_and_f1': False, 'report_pearson_and_spearman': False}, 'optimizer': {'_name': 'adam', 'adam_betas': '(0.9,0.98)', 'adam_eps': 1e-06, 'weight_decay': 0.1, 'use_old_adam': False, 'fp16_adam_stats': False, 'tpu': '${common.tpu}', 'lr': '${optimization.lr}'}, 'lr_scheduler': {'_name': 'polynomial_decay', 'warmup_updates': 122, 'force_anneal': None, 'end_learning_rate': 0.0, 'power': 1.0, 'total_num_update': '${optimization.max_update}', 'lr': '${optimization.lr}'}, 'scoring': None, 'bpe': None, 'tokenizer': None, 'ema': {'_name': None, 'store_ema': False, 'ema_decay': 0.9999, 'ema_start_update': 0, 'ema_seed_model': None, 'ema_update_freq': 1, 'ema_fp32': False}}
[2024-03-01 16:07:47,599][fairseq_cli.train][INFO] - {'_name': None, 'common': {'_name': None, 'no_progress_bar': False, 'log_interval': 200, 'log_format': 'json', 'log_file': None, 'aim_repo': None, 'aim_run_hash': None, 'tensorboard_logdir': None, 'wandb_project': None, 'azureml_logging': False, 'seed': 1, 'cpu': False, 'tpu': False, 'bf16': False, 'memory_efficient_bf16': False, 'fp16': True, 'memory_efficient_fp16': False, 'fp16_no_flatten_grads': False, 'fp16_init_scale': 4, 'fp16_scale_window': 128, 'fp16_scale_tolerance': 0.0, 'on_cpu_convert_precision': False, 'min_loss_scale': 0.0001, 'threshold_loss_scale': 1.0, 'amp': False, 'amp_batch_retries': 2, 'amp_init_scale': 128, 'amp_scale_window': None, 'user_dir': None, 'empty_cache_freq': 0, 'all_gather_list_size': 16384, 'model_parallel_size': 1, 'quantization_config_path': None, 'profile': False, 'reset_logging': False, 'suppress_crashes': False, 'use_plasma_view': False, 'plasma_path': '/tmp/plasma'}, 'common_eval': {'_name': None, 'path': None, 'post_process': None, 'quiet': False, 'model_overrides': '{}', 'results_path': None}, 'distributed_training': {'_name': None, 'distributed_world_size': 1, 'distributed_num_procs': 1, 'distributed_rank': 0, 'distributed_backend': 'nccl', 'distributed_init_method': None, 'distributed_port': -1, 'device_id': 0, 'distributed_no_spawn': False, 'ddp_backend': 'pytorch_ddp', 'ddp_comm_hook': 'none', 'bucket_cap_mb': 25, 'fix_batches_to_gpus': False, 'find_unused_parameters': True, 'gradient_as_bucket_view': False, 'fast_stat_sync': False, 'heartbeat_timeout': -1, 'broadcast_buffers': False, 'slowmo_momentum': None, 'slowmo_base_algorithm': 'localsgd', 'localsgd_frequency': 3, 'nprocs_per_node': 1, 'pipeline_model_parallel': False, 'pipeline_balance': None, 'pipeline_devices': None, 'pipeline_chunks': 0, 'pipeline_encoder_balance': None, 'pipeline_encoder_devices': None, 'pipeline_decoder_balance': None, 'pipeline_decoder_devices': None, 'pipeline_checkpoint': 'never', 'zero_sharding': 'none', 'fp16': True, 'memory_efficient_fp16': False, 'tpu': False, 'no_reshard_after_forward': False, 'fp32_reduce_scatter': False, 'cpu_offload': False, 'use_sharded_state': False, 'not_fsdp_flatten_parameters': False}, 'dataset': {'_name': None, 'num_workers': 1, 'skip_invalid_size_inputs_valid_test': False, 'max_tokens': 4400, 'batch_size': 16, 'required_batch_size_multiple': 1, 'required_seq_len_multiple': 1, 'dataset_impl': None, 'data_buffer_size': 10, 'train_subset': 'train', 'valid_subset': 'valid', 'combine_valid_subsets': None, 'ignore_unused_valid_subsets': False, 'validate_interval': 1, 'validate_interval_updates': 0, 'validate_after_updates': 0, 'fixed_validation_seed': None, 'disable_validation': False, 'max_tokens_valid': 4400, 'batch_size_valid': 16, 'max_valid_steps': None, 'curriculum': 0, 'gen_subset': 'test', 'num_shards': 1, 'shard_id': 0, 'grouped_shuffling': False, 'update_epoch_batch_itr': False, 'update_ordered_indices_seed': False}, 'optimization': {'_name': None, 'max_epoch': 10, 'max_update': 2036, 'stop_time_hours': 0.0, 'clip_norm': 0.0, 'sentence_avg': False, 'update_freq': [1], 'lr': [2e-05], 'stop_min_lr': -1.0, 'use_bmuf': False, 'skip_remainder_batch': False, 'debug_param_names': False}, 'checkpoint': {'_name': None, 'save_dir': 'checkpoints', 'restore_file': '/mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/roberta.base/model.pt', 'continue_once': None, 'finetune_from_model': None, 'reset_dataloader': True, 'reset_lr_scheduler': False, 'reset_meters': True, 'reset_optimizer': True, 'optimizer_overrides': '{}', 'save_interval': 1, 'save_interval_updates': 0, 'keep_interval_updates': -1, 'keep_interval_updates_pattern': -1, 'keep_last_epochs': -1, 'keep_best_checkpoints': -1, 'no_save': False, 'no_epoch_checkpoints': True, 'no_last_checkpoints': False, 'no_save_optimizer_state': False, 'best_checkpoint_metric': 'accuracy', 'maximize_best_checkpoint_metric': True, 'patience': -1, 'checkpoint_suffix': '', 'checkpoint_shard_count': 1, 'load_checkpoint_on_all_dp_ranks': False, 'write_checkpoints_asynchronously': False, 'model_parallel_size': 1}, 'bmuf': {'_name': None, 'block_lr': 1.0, 'block_momentum': 0.875, 'global_sync_iter': 50, 'warmup_iterations': 500, 'use_nbm': False, 'average_sync': False, 'distributed_world_size': 1}, 'generation': {'_name': None, 'beam': 5, 'beam_mt': 0, 'nbest': 1, 'max_len_a': 0.0, 'max_len_b': 200, 'max_len_a_mt': 0.0, 'max_len_b_mt': 200, 'min_len': 1, 'match_source_len': False, 'unnormalized': False, 'no_early_stop': False, 'no_beamable_mm': False, 'lenpen': 1.0, 'lenpen_mt': 1.0, 'unkpen': 0.0, 'replace_unk': None, 'sacrebleu': False, 'score_reference': False, 'prefix_size': 0, 'no_repeat_ngram_size': 0, 'sampling': False, 'sampling_topk': -1, 'sampling_topp': -1.0, 'constraints': None, 'temperature': 1.0, 'diverse_beam_groups': -1, 'diverse_beam_strength': 0.5, 'diversity_rate': -1.0, 'print_alignment': None, 'print_step': False, 'lm_path': None, 'lm_weight': 0.0, 'iter_decode_eos_penalty': 0.0, 'iter_decode_max_iter': 10, 'iter_decode_force_max_iter': False, 'iter_decode_with_beam': 1, 'iter_decode_with_external_reranker': False, 'retain_iter_history': False, 'retain_dropout': False, 'retain_dropout_modules': None, 'decoding_format': None, 'no_seed_provided': False, 'eos_token': None}, 'eval_lm': {'_name': None, 'output_word_probs': False, 'output_word_stats': False, 'context_window': 0, 'softmax_batch': 9223372036854775807}, 'interactive': {'_name': None, 'buffer_size': 0, 'input': '-'}, 'model': {'_name': 'roberta', 'dropout': 0.1, 'attention_dropout': 0.1}, 'task': {'_name': 'sentence_prediction', 'data': '/mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/RTE-bin', 'num_classes': 2, 'init_token': 0, 'separator_token': 2, 'no_shuffle': False, 'shorten_method': none, 'shorten_data_split_list': '', 'add_prev_output_tokens': False, 'max_positions': 512, 'regression_target': False, 'classification_head_name': 'sentence_classification_head', 'seed': 1, 'd2v2_multi': False}, 'criterion': {'_name': 'sentence_prediction', 'classification_head_name': 'sentence_classification_head', 'regression_target': False, 'report_mcc': False, 'report_acc_and_f1': False, 'report_pearson_and_spearman': False}, 'optimizer': {'_name': 'adam', 'adam_betas': '(0.9,0.98)', 'adam_eps': 1e-06, 'weight_decay': 0.1, 'use_old_adam': False, 'fp16_adam_stats': False, 'tpu': False, 'lr': [2e-05]}, 'lr_scheduler': {'_name': 'polynomial_decay', 'warmup_updates': 122, 'force_anneal': None, 'end_learning_rate': 0.0, 'power': 1.0, 'total_num_update': 2036.0, 'lr': [2e-05]}, 'scoring': None, 'bpe': None, 'tokenizer': None, 'ema': {'_name': None, 'store_ema': False, 'ema_decay': 0.9999, 'ema_start_update': 0, 'ema_seed_model': None, 'ema_update_freq': 1, 'ema_fp32': False}, 'job_logging_cfg': {'version': 1, 'formatters': {'simple': {'format': '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'}}, 'handlers': {'console': {'class': 'logging.StreamHandler', 'formatter': 'simple', 'stream': 'ext://sys.stdout'}, 'file': {'class': 'logging.FileHandler', 'formatter': 'simple', 'filename': 'hydra_train.log'}}, 'root': {'level': 'INFO', 'handlers': ['console', 'file']}, 'disable_existing_loggers': False}}
[2024-03-01 16:07:47,674][fairseq.tasks.sentence_prediction][INFO] - [input] dictionary: 50265 types
[2024-03-01 16:07:47,685][fairseq.tasks.sentence_prediction][INFO] - [label] dictionary: 9 types
[2024-03-01 16:07:50,663][fairseq_cli.train][INFO] - RobertaModel(
  (encoder): RobertaEncoder(
    (sentence_encoder): TransformerEncoder(
      (dropout_module): FairseqDropout()
      (embed_tokens): Embedding(50265, 768, padding_idx=1)
      (embed_positions): LearnedPositionalEmbedding(514, 768, padding_idx=1)
      (layernorm_embedding): FusedLayerNorm(torch.Size([768]), eps=1e-05, elementwise_affine=True)
      (layers): ModuleList(
        (0-11): 12 x TransformerEncoderLayerBase(
          (self_attn): MultiheadAttention(
            (quantize_input): QuantMeasure()
            (dropout_module): FairseqDropout()
            (k_proj): QLinear(
              in_features=768, out_features=768, bias=True
              (linear): Linear(in_features=768, out_features=768, bias=True)
              (quantize_input): QuantMeasure()
            )
            (v_proj): QLinear(
              in_features=768, out_features=768, bias=True
              (linear): Linear(in_features=768, out_features=768, bias=True)
              (quantize_input): QuantMeasure()
            )
            (q_proj): QLinear(
              in_features=768, out_features=768, bias=True
              (linear): Linear(in_features=768, out_features=768, bias=True)
              (quantize_input): QuantMeasure()
            )
            (out_proj): QLinear(
              in_features=768, out_features=768, bias=True
              (linear): Linear(in_features=768, out_features=768, bias=True)
              (quantize_input): QuantMeasure()
            )
          )
          (self_attn_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-05, elementwise_affine=True)
          (dropout_module): FairseqDropout()
          (activation_dropout_module): FairseqDropout()
          (fc1): QLinear(
            in_features=768, out_features=3072, bias=True
            (linear): Linear(in_features=768, out_features=3072, bias=True)
            (quantize_input): QuantMeasure()
          )
          (fc2): QLinear(
            in_features=3072, out_features=768, bias=True
            (linear): Linear(in_features=3072, out_features=768, bias=True)
            (quantize_input): QuantMeasure()
          )
          (final_layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (lm_head): RobertaLMHead(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (layer_norm): FusedLayerNorm(torch.Size([768]), eps=1e-05, elementwise_affine=True)
    )
  )
  (classification_heads): ModuleDict(
    (sentence_classification_head): RobertaClassificationHead(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (dropout): Dropout(p=0.0, inplace=False)
      (out_proj): Linear(in_features=768, out_features=2, bias=True)
    )
  )
)
[2024-03-01 16:07:50,666][fairseq_cli.train][INFO] - task: SentencePredictionTask
[2024-03-01 16:07:50,666][fairseq_cli.train][INFO] - model: RobertaModel
[2024-03-01 16:07:50,668][fairseq_cli.train][INFO] - criterion: SentencePredictionCriterion
[2024-03-01 16:07:50,670][fairseq_cli.train][INFO] - num. shared model params: 210,306,395 (num. trained: 210,306,395)
[2024-03-01 16:07:50,672][fairseq_cli.train][INFO] - num. expert model params: 0 (num. trained: 0)
[2024-03-01 16:07:50,716][fairseq.data.data_utils][INFO] - loaded 277 examples from: /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/RTE-bin/input0/valid
[2024-03-01 16:07:50,754][fairseq.data.data_utils][INFO] - loaded 277 examples from: /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/RTE-bin/input1/valid
[2024-03-01 16:07:50,788][fairseq.data.data_utils][INFO] - loaded 277 examples from: /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/RTE-bin/label/valid
[2024-03-01 16:07:50,789][fairseq.tasks.sentence_prediction][INFO] - Loaded valid with #samples: 277
MY TRAINER CONFIG! {'_name': None, 'common': {'_name': None, 'no_progress_bar': False, 'log_interval': 200, 'log_format': 'json', 'log_file': None, 'aim_repo': None, 'aim_run_hash': None, 'tensorboard_logdir': None, 'wandb_project': None, 'azureml_logging': False, 'seed': 1, 'cpu': False, 'tpu': False, 'bf16': False, 'memory_efficient_bf16': False, 'fp16': True, 'memory_efficient_fp16': False, 'fp16_no_flatten_grads': False, 'fp16_init_scale': 4, 'fp16_scale_window': 128, 'fp16_scale_tolerance': 0.0, 'on_cpu_convert_precision': False, 'min_loss_scale': 0.0001, 'threshold_loss_scale': 1.0, 'amp': False, 'amp_batch_retries': 2, 'amp_init_scale': 128, 'amp_scale_window': None, 'user_dir': None, 'empty_cache_freq': 0, 'all_gather_list_size': 16384, 'model_parallel_size': 1, 'quantization_config_path': None, 'profile': False, 'reset_logging': False, 'suppress_crashes': False, 'use_plasma_view': False, 'plasma_path': '/tmp/plasma'}, 'common_eval': {'_name': None, 'path': None, 'post_process': None, 'quiet': False, 'model_overrides': '{}', 'results_path': None}, 'distributed_training': {'_name': None, 'distributed_world_size': 1, 'distributed_num_procs': 1, 'distributed_rank': 0, 'distributed_backend': 'nccl', 'distributed_init_method': None, 'distributed_port': -1, 'device_id': 0, 'distributed_no_spawn': False, 'ddp_backend': 'pytorch_ddp', 'ddp_comm_hook': 'none', 'bucket_cap_mb': 25, 'fix_batches_to_gpus': False, 'find_unused_parameters': True, 'gradient_as_bucket_view': False, 'fast_stat_sync': False, 'heartbeat_timeout': -1, 'broadcast_buffers': False, 'slowmo_momentum': None, 'slowmo_base_algorithm': 'localsgd', 'localsgd_frequency': 3, 'nprocs_per_node': 1, 'pipeline_model_parallel': False, 'pipeline_balance': None, 'pipeline_devices': None, 'pipeline_chunks': 0, 'pipeline_encoder_balance': None, 'pipeline_encoder_devices': None, 'pipeline_decoder_balance': None, 'pipeline_decoder_devices': None, 'pipeline_checkpoint': 'never', 'zero_sharding': 'none', 'fp16': True, 'memory_efficient_fp16': False, 'tpu': False, 'no_reshard_after_forward': False, 'fp32_reduce_scatter': False, 'cpu_offload': False, 'use_sharded_state': False, 'not_fsdp_flatten_parameters': False}, 'dataset': {'_name': None, 'num_workers': 1, 'skip_invalid_size_inputs_valid_test': False, 'max_tokens': 4400, 'batch_size': 16, 'required_batch_size_multiple': 1, 'required_seq_len_multiple': 1, 'dataset_impl': None, 'data_buffer_size': 10, 'train_subset': 'train', 'valid_subset': 'valid', 'combine_valid_subsets': None, 'ignore_unused_valid_subsets': False, 'validate_interval': 1, 'validate_interval_updates': 0, 'validate_after_updates': 0, 'fixed_validation_seed': None, 'disable_validation': False, 'max_tokens_valid': 4400, 'batch_size_valid': 16, 'max_valid_steps': None, 'curriculum': 0, 'gen_subset': 'test', 'num_shards': 1, 'shard_id': 0, 'grouped_shuffling': False, 'update_epoch_batch_itr': False, 'update_ordered_indices_seed': False}, 'optimization': {'_name': None, 'max_epoch': 10, 'max_update': 2036, 'stop_time_hours': 0.0, 'clip_norm': 0.0, 'sentence_avg': False, 'update_freq': [1], 'lr': [2e-05], 'stop_min_lr': -1.0, 'use_bmuf': False, 'skip_remainder_batch': False, 'debug_param_names': False}, 'checkpoint': {'_name': None, 'save_dir': 'checkpoints', 'restore_file': '/mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/roberta.base/model.pt', 'continue_once': None, 'finetune_from_model': None, 'reset_dataloader': True, 'reset_lr_scheduler': False, 'reset_meters': True, 'reset_optimizer': True, 'optimizer_overrides': '{}', 'save_interval': 1, 'save_interval_updates': 0, 'keep_interval_updates': -1, 'keep_interval_updates_pattern': -1, 'keep_last_epochs': -1, 'keep_best_checkpoints': -1, 'no_save': False, 'no_epoch_checkpoints': True, 'no_last_checkpoints': False, 'no_save_optimizer_state': False, 'best_checkpoint_metric': 'accuracy', 'maximize_best_checkpoint_metric': True, 'patience': -1, 'checkpoint_suffix': '', 'checkpoint_shard_count': 1, 'load_checkpoint_on_all_dp_ranks': False, 'write_checkpoints_asynchronously': False, 'model_parallel_size': 1}, 'bmuf': {'_name': None, 'block_lr': 1.0, 'block_momentum': 0.875, 'global_sync_iter': 50, 'warmup_iterations': 500, 'use_nbm': False, 'average_sync': False, 'distributed_world_size': 1}, 'generation': {'_name': None, 'beam': 5, 'beam_mt': 0, 'nbest': 1, 'max_len_a': 0.0, 'max_len_b': 200, 'max_len_a_mt': 0.0, 'max_len_b_mt': 200, 'min_len': 1, 'match_source_len': False, 'unnormalized': False, 'no_early_stop': False, 'no_beamable_mm': False, 'lenpen': 1.0, 'lenpen_mt': 1.0, 'unkpen': 0.0, 'replace_unk': None, 'sacrebleu': False, 'score_reference': False, 'prefix_size': 0, 'no_repeat_ngram_size': 0, 'sampling': False, 'sampling_topk': -1, 'sampling_topp': -1.0, 'constraints': None, 'temperature': 1.0, 'diverse_beam_groups': -1, 'diverse_beam_strength': 0.5, 'diversity_rate': -1.0, 'print_alignment': None, 'print_step': False, 'lm_path': None, 'lm_weight': 0.0, 'iter_decode_eos_penalty': 0.0, 'iter_decode_max_iter': 10, 'iter_decode_force_max_iter': False, 'iter_decode_with_beam': 1, 'iter_decode_with_external_reranker': False, 'retain_iter_history': False, 'retain_dropout': False, 'retain_dropout_modules': None, 'decoding_format': None, 'no_seed_provided': False, 'eos_token': None}, 'eval_lm': {'_name': None, 'output_word_probs': False, 'output_word_stats': False, 'context_window': 0, 'softmax_batch': 9223372036854775807}, 'interactive': {'_name': None, 'buffer_size': 0, 'input': '-'}, 'model': {'_name': 'roberta', 'dropout': 0.1, 'attention_dropout': 0.1, 'max_positions': 512, 'encoder_layers': 12, 'encoder_embed_dim': 768, 'encoder_ffn_embed_dim': 3072, 'encoder_attention_heads': 12, 'activation_dropout': 0.0, 'pooler_dropout': 0.0, 'max_source_positions': 512, 'no_token_positional_embeddings': False, 'encoder_learned_pos': True, 'layernorm_embedding': True, 'no_scale_embedding': True, 'activation_fn': 'gelu', 'encoder_normalize_before': False, 'pooler_activation_fn': 'tanh', 'untie_weights_roberta': False, 'adaptive_input': False, 'encoder_layerdrop': 0.0, 'encoder_layers_to_keep': None, 'quant_noise_pq': 0, 'quant_noise_pq_block_size': 8, 'quant_noise_scalar': 0, 'spectral_norm_classification_head': False}, 'task': {'_name': 'sentence_prediction', 'data': '/mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/RTE-bin', 'num_classes': 2, 'init_token': 0, 'separator_token': 2, 'no_shuffle': False, 'shorten_method': none, 'shorten_data_split_list': '', 'add_prev_output_tokens': False, 'max_positions': 512, 'regression_target': False, 'classification_head_name': 'sentence_classification_head', 'seed': 1, 'd2v2_multi': False}, 'criterion': {'_name': 'sentence_prediction', 'classification_head_name': 'sentence_classification_head', 'regression_target': False, 'report_mcc': False, 'report_acc_and_f1': False, 'report_pearson_and_spearman': False}, 'optimizer': {'_name': 'adam', 'adam_betas': '(0.9,0.98)', 'adam_eps': 1e-06, 'weight_decay': 0.1, 'use_old_adam': False, 'fp16_adam_stats': False, 'tpu': False, 'lr': [2e-05]}, 'lr_scheduler': {'_name': 'polynomial_decay', 'warmup_updates': 122, 'force_anneal': None, 'end_learning_rate': 0.0, 'power': 1.0, 'total_num_update': 2036.0, 'lr': [2e-05]}, 'scoring': None, 'bpe': None, 'tokenizer': None, 'ema': {'_name': None, 'store_ema': False, 'ema_decay': 0.9999, 'ema_start_update': 0, 'ema_seed_model': None, 'ema_update_freq': 1, 'ema_fp32': False}, 'job_logging_cfg': {'version': 1, 'formatters': {'simple': {'format': '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'}}, 'handlers': {'console': {'class': 'logging.StreamHandler', 'formatter': 'simple', 'stream': 'ext://sys.stdout'}, 'file': {'class': 'logging.FileHandler', 'formatter': 'simple', 'filename': 'hydra_train.log'}}, 'root': {'level': 'INFO', 'handlers': ['console', 'file']}, 'disable_existing_loggers': False}}
MY MODEL!
[2024-03-01 16:07:51,393][fairseq.trainer][INFO] - detected shared parameter: encoder.sentence_encoder.embed_tokens.weight <- encoder.lm_head.weight
[2024-03-01 16:07:51,395][fairseq.utils][INFO] - ***********************CUDA enviroments for all 1 workers***********************
[2024-03-01 16:07:51,396][fairseq.utils][INFO] - rank   0: capabilities =  8.6  ; total memory = 16.000 GB ; name = NVIDIA GeForce RTX 3080 Ti Laptop GPU   
[2024-03-01 16:07:51,397][fairseq.utils][INFO] - ***********************CUDA enviroments for all 1 workers***********************
[2024-03-01 16:07:51,398][fairseq_cli.train][INFO] - training on 1 devices (GPUs/TPUs)
[2024-03-01 16:07:51,400][fairseq_cli.train][INFO] - max tokens per device = 4400 and max sentences per device = 16
[2024-03-01 16:07:51,402][fairseq.trainer][INFO] - Preparing to load checkpoint /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/roberta.base/model.pt
STATE_DICT !!!
Layer: decoder.sentence_encoder.embed_tokens.weight, Shape: torch.Size([50265, 768])
Layer: decoder.sentence_encoder.embed_positions.weight, Shape: torch.Size([514, 768])
Layer: decoder.sentence_encoder.layers.0.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.0.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.0.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.0.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.0.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.0.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.0.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.0.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.0.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.0.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.0.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.0.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.1.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.1.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.1.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.1.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.1.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.1.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.1.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.1.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.1.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.1.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.1.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.1.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.2.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.2.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.2.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.2.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.2.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.2.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.2.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.2.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.2.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.2.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.2.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.2.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.3.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.3.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.3.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.3.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.3.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.3.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.3.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.3.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.3.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.3.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.3.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.3.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.4.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.4.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.4.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.4.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.4.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.4.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.4.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.4.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.4.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.4.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.4.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.4.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.5.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.5.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.5.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.5.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.5.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.5.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.5.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.5.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.5.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.5.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.5.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.5.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.6.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.6.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.6.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.6.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.6.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.6.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.6.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.6.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.6.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.6.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.6.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.6.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.7.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.7.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.7.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.7.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.7.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.7.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.7.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.7.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.7.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.7.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.7.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.7.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.8.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.8.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.8.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.8.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.8.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.8.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.8.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.8.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.8.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.8.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.8.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.8.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.9.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.9.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.9.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.9.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.9.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.9.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.9.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.9.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.9.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.9.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.9.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.9.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.10.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.10.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.10.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.10.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.10.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.10.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.10.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.10.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.10.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.10.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.10.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.10.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.11.self_attn.in_proj_weight, Shape: torch.Size([2304, 768])
Layer: decoder.sentence_encoder.layers.11.self_attn.in_proj_bias, Shape: torch.Size([2304])
Layer: decoder.sentence_encoder.layers.11.self_attn.out_proj.weight, Shape: torch.Size([768, 768])
Layer: decoder.sentence_encoder.layers.11.self_attn.out_proj.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.11.self_attn_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.11.self_attn_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.11.fc1.weight, Shape: torch.Size([3072, 768])
Layer: decoder.sentence_encoder.layers.11.fc1.bias, Shape: torch.Size([3072])
Layer: decoder.sentence_encoder.layers.11.fc2.weight, Shape: torch.Size([768, 3072])
Layer: decoder.sentence_encoder.layers.11.fc2.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.11.final_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.layers.11.final_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.emb_layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.sentence_encoder.emb_layer_norm.bias, Shape: torch.Size([768])
Layer: decoder.lm_head.weight, Shape: torch.Size([50265, 768])
Layer: decoder.lm_head.bias, Shape: torch.Size([50265])
Layer: decoder.lm_head.dense.weight, Shape: torch.Size([768, 768])
Layer: decoder.lm_head.dense.bias, Shape: torch.Size([768])
Layer: decoder.lm_head.layer_norm.weight, Shape: torch.Size([768])
Layer: decoder.lm_head.layer_norm.bias, Shape: torch.Size([768])
[2024-03-01 16:08:01,389][fairseq.models.roberta.model][INFO] - Overwriting classification_heads.sentence_classification_head.dense.weight
[2024-03-01 16:08:01,390][fairseq.models.roberta.model][INFO] - Overwriting classification_heads.sentence_classification_head.dense.bias
[2024-03-01 16:08:01,391][fairseq.models.roberta.model][INFO] - Overwriting classification_heads.sentence_classification_head.out_proj.weight
[2024-03-01 16:08:01,392][fairseq.models.roberta.model][INFO] - Overwriting classification_heads.sentence_classification_head.out_proj.bias
[2024-03-01 16:08:01,797][fairseq.optim.adam][INFO] - using FusedAdam
[2024-03-01 16:08:02,488][fairseq.trainer][INFO] - Loaded checkpoint /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/roberta.base/model.pt (epoch 1 @ 0 updates)
[2024-03-01 16:08:02,489][fairseq.trainer][INFO] - loading train data for epoch 1
[2024-03-01 16:08:02,527][fairseq.data.data_utils][INFO] - loaded 2,490 examples from: /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/RTE-bin/input0/train
[2024-03-01 16:08:02,560][fairseq.data.data_utils][INFO] - loaded 2,490 examples from: /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/RTE-bin/input1/train
[2024-03-01 16:08:02,597][fairseq.data.data_utils][INFO] - loaded 2,490 examples from: /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/RTE-bin/label/train
[2024-03-01 16:08:02,599][fairseq.tasks.sentence_prediction][INFO] - Loaded train with #samples: 2490
[2024-03-01 16:08:02,601][fairseq.tasks.fairseq_task][INFO] - can_reuse_epoch_itr = True
[2024-03-01 16:08:02,602][fairseq.tasks.fairseq_task][INFO] - reuse_dataloader = True
[2024-03-01 16:08:02,602][fairseq.tasks.fairseq_task][INFO] - rebuild_batches = False
[2024-03-01 16:08:02,603][fairseq.tasks.fairseq_task][INFO] - creating new batches for epoch 1
[2024-03-01 16:08:02,656][fairseq_cli.train][INFO] - begin dry-run validation on "valid" subset
[2024-03-01 16:08:02,658][fairseq.tasks.fairseq_task][INFO] - can_reuse_epoch_itr = True
[2024-03-01 16:08:02,659][fairseq.tasks.fairseq_task][INFO] - reuse_dataloader = True
[2024-03-01 16:08:02,660][fairseq.tasks.fairseq_task][INFO] - rebuild_batches = False
[2024-03-01 16:08:02,661][fairseq.tasks.fairseq_task][INFO] - creating new batches for epoch 1
we set this layer to freeze:  encoder.sentence_encoder.embed_tokens.weight
we set this layer to freeze:  encoder.sentence_encoder.embed_positions.weight
we set this layer to freeze:  encoder.sentence_encoder.layernorm_embedding.weight
we set this layer to freeze:  encoder.sentence_encoder.layernorm_embedding.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.0.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.0.final_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.1.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.1.final_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.2.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.2.final_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.3.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.3.final_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.4.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.4.final_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.5.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.5.final_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.6.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.6.final_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.7.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.7.final_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.8.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.8.final_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.9.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.9.final_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.10.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.10.final_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.k_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.k_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.k_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.k_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.v_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.v_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.v_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.v_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.q_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.q_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.q_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.q_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.out_proj.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.out_proj.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.out_proj.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn.out_proj.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.self_attn_layer_norm.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.fc1.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.fc1.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.fc1.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.fc1.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.fc2.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.fc2.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.fc2.linear.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.fc2.linear.bias
we set this layer to freeze:  encoder.sentence_encoder.layers.11.final_layer_norm.weight
we set this layer to freeze:  encoder.sentence_encoder.layers.11.final_layer_norm.bias
we set this layer to freeze:  classification_heads.sentence_classification_head.dense.weight
we set this layer to freeze:  classification_heads.sentence_classification_head.dense.bias
we set this layer to freeze:  classification_heads.sentence_classification_head.out_proj.weight
we set this layer to freeze:  classification_heads.sentence_classification_head.out_proj.bias
[2024-03-01 16:08:02,852][fairseq.data.iterators][INFO] - grouped total_num_itrs = 156
[2024-03-01 16:08:02,856][fairseq.trainer][INFO] - begin training epoch 1
[2024-03-01 16:08:02,858][fairseq_cli.train][INFO] - Start iterating over samples
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































[2024-03-01 16:08:17,823][fairseq_cli.train][INFO] - begin validation on "valid" subset
[2024-03-01 16:08:17,825][fairseq.tasks.fairseq_task][INFO] - can_reuse_epoch_itr = True
















































































































































































































































































































































































































































[2024-03-01 16:08:18,837][valid][INFO] - {"epoch": 1, "valid_loss": "1.008", "valid_nll_loss": "0.015", "valid_accuracy": "48", "valid_wps": "19831.4", "valid_wpb": "1069.6", "valid_bsz": "15.4", "valid_num_updates": "156"}
[2024-03-01 16:08:18,841][fairseq.checkpoint_utils][INFO] - Preparing to save checkpoint for epoch 1 @ 156 updates
[2024-03-01 16:08:18,843][fairseq.trainer][INFO] - Saving checkpoint to /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/outputs/2024-03-01/16-07-46/checkpoints/checkpoint_best.pt
[2024-03-01 16:08:26,294][fairseq.trainer][INFO] - Finished saving checkpoint to /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/outputs/2024-03-01/16-07-46/checkpoints/checkpoint_best.pt
[2024-03-01 16:10:04,728][fairseq.checkpoint_utils][INFO] - Saved checkpoint checkpoints/checkpoint_best.pt (epoch 1 @ 156 updates, score 48.0) (writing took 105.88691292600001 seconds)
[2024-03-01 16:10:04,729][fairseq_cli.train][INFO] - end of epoch 1 (average epoch stats below)
[2024-03-01 16:10:04,731][train][INFO] - {"epoch": 1, "train_loss": "0", "train_nll_loss": "0", "train_accuracy": "50.5", "train_wps": "1459.1", "train_ups": "1.28", "train_wpb": "1136.7", "train_bsz": "16", "train_num_updates": "156", "train_lr": "1.96447e-05", "train_gnorm": "0", "train_loss_scale": "8", "train_train_wall": "15", "train_gb_free": "12.3", "train_wall": "133"}
[2024-03-01 16:10:04,733][fairseq.tasks.fairseq_task][INFO] - can_reuse_epoch_itr = True
[2024-03-01 16:10:04,735][fairseq.data.iterators][INFO] - grouped total_num_itrs = 156
[2024-03-01 16:10:04,738][fairseq.trainer][INFO] - begin training epoch 2
[2024-03-01 16:10:04,739][fairseq_cli.train][INFO] - Start iterating over samples
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































[2024-03-01 16:10:08,620][train_inner][INFO] - {"epoch": 2, "update": 1.282, "loss": "0", "nll_loss": "0", "accuracy": "50.1", "wps": "1816.3", "ups": "1.6", "wpb": "1137.4", "bsz": "16", "num_updates": "200", "lr": "1.9185e-05", "gnorm": "0", "loss_scale": "8", "train_wall": "18", "gb_free": "12.4", "wall": "137"}
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































[2024-03-01 16:10:17,834][fairseq_cli.train][INFO] - begin validation on "valid" subset
[2024-03-01 16:10:17,835][fairseq.tasks.fairseq_task][INFO] - can_reuse_epoch_itr = True
















































































































































































































































































































































































































































[2024-03-01 16:10:18,777][valid][INFO] - {"epoch": 2, "valid_loss": "1.014", "valid_nll_loss": "0.015", "valid_accuracy": "48", "valid_wps": "21009.8", "valid_wpb": "1069.6", "valid_bsz": "15.4", "valid_num_updates": "312", "valid_best_accuracy": "48"}
[2024-03-01 16:10:18,780][fairseq.checkpoint_utils][INFO] - Preparing to save checkpoint for epoch 2 @ 312 updates
[2024-03-01 16:10:18,781][fairseq.trainer][INFO] - Saving checkpoint to /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/outputs/2024-03-01/16-07-46/checkpoints/checkpoint_best.pt
[2024-03-01 16:10:24,756][fairseq.trainer][INFO] - Finished saving checkpoint to /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/outputs/2024-03-01/16-07-46/checkpoints/checkpoint_best.pt
[2024-03-01 16:11:56,789][fairseq.checkpoint_utils][INFO] - Saved checkpoint checkpoints/checkpoint_best.pt (epoch 2 @ 312 updates, score 48.0) (writing took 98.008828032 seconds)
[2024-03-01 16:11:56,790][fairseq_cli.train][INFO] - end of epoch 2 (average epoch stats below)
[2024-03-01 16:11:56,792][train][INFO] - {"epoch": 2, "train_loss": "0", "train_nll_loss": "0", "train_accuracy": "49.4", "train_wps": "1582.4", "train_ups": "1.39", "train_wpb": "1136.7", "train_bsz": "16", "train_num_updates": "312", "train_lr": "1.80146e-05", "train_gnorm": "0", "train_loss_scale": "16", "train_train_wall": "13", "train_gb_free": "12.4", "train_wall": "245"}
[2024-03-01 16:11:56,794][fairseq.tasks.fairseq_task][INFO] - can_reuse_epoch_itr = True
[2024-03-01 16:11:56,797][fairseq.data.iterators][INFO] - grouped total_num_itrs = 156
[2024-03-01 16:11:56,799][fairseq.trainer][INFO] - begin training epoch 3
[2024-03-01 16:11:56,800][fairseq_cli.train][INFO] - Start iterating over samples
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































[2024-03-01 16:12:04,455][train_inner][INFO] - {"epoch": 3, "update": 2.564, "loss": "0", "nll_loss": "0", "accuracy": "49.1", "wps": "1948.8", "ups": "1.73", "wpb": "1128.7", "bsz": "16", "num_updates": "400", "lr": "1.70951e-05", "gnorm": "0", "loss_scale": "32", "train_wall": "17", "gb_free": "12.4", "wall": "253"}
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































[2024-03-01 16:12:10,044][fairseq_cli.train][INFO] - begin validation on "valid" subset
[2024-03-01 16:12:10,045][fairseq.tasks.fairseq_task][INFO] - can_reuse_epoch_itr = True
















































































































































































































































































































































































































































[2024-03-01 16:12:10,983][valid][INFO] - {"epoch": 3, "valid_loss": "1.004", "valid_nll_loss": "0.014", "valid_accuracy": "44.8", "valid_wps": "21063", "valid_wpb": "1069.6", "valid_bsz": "15.4", "valid_num_updates": "468", "valid_best_accuracy": "48"}
[2024-03-01 16:12:10,985][fairseq.checkpoint_utils][INFO] - Preparing to save checkpoint for epoch 3 @ 468 updates
[2024-03-01 16:12:10,986][fairseq.trainer][INFO] - Saving checkpoint to /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/outputs/2024-03-01/16-07-46/checkpoints/checkpoint_last.pt
[2024-03-01 16:12:17,188][fairseq.trainer][INFO] - Finished saving checkpoint to /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/outputs/2024-03-01/16-07-46/checkpoints/checkpoint_last.pt
[2024-03-01 16:12:17,194][fairseq.checkpoint_utils][INFO] - Saved checkpoint checkpoints/checkpoint_last.pt (epoch 3 @ 468 updates, score 44.8) (writing took 6.2084402969999815 seconds)
[2024-03-01 16:12:17,195][fairseq_cli.train][INFO] - end of epoch 3 (average epoch stats below)
[2024-03-01 16:12:17,199][train][INFO] - {"epoch": 3, "train_loss": "0", "train_nll_loss": "0", "train_accuracy": "48", "train_wps": "8690.1", "train_ups": "7.65", "train_wpb": "1136.7", "train_bsz": "16", "train_num_updates": "468", "train_lr": "1.63845e-05", "train_gnorm": "0", "train_loss_scale": "32", "train_train_wall": "13", "train_gb_free": "12.4", "train_wall": "266"}
[2024-03-01 16:12:17,201][fairseq.tasks.fairseq_task][INFO] - can_reuse_epoch_itr = True
[2024-03-01 16:12:17,204][fairseq.data.iterators][INFO] - grouped total_num_itrs = 156
[2024-03-01 16:12:17,206][fairseq.trainer][INFO] - begin training epoch 4
[2024-03-01 16:12:17,208][fairseq_cli.train][INFO] - Start iterating over samples
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































[2024-03-01 16:12:28,406][train_inner][INFO] - {"epoch": 4, "update": 3.846, "loss": "0", "nll_loss": "0", "accuracy": "49.9", "wps": "9581.2", "ups": "8.35", "wpb": "1147.3", "bsz": "15.9", "num_updates": "600", "lr": "1.50052e-05", "gnorm": "0", "loss_scale": "64", "train_wall": "16", "gb_free": "12.4", "wall": "277"}
































































































































































































































































































































































































































































































































































































[2024-03-01 16:12:30,352][fairseq_cli.train][INFO] - begin validation on "valid" subset
[2024-03-01 16:12:30,354][fairseq.tasks.fairseq_task][INFO] - can_reuse_epoch_itr = True
















































































































































































































































































































































































































































[2024-03-01 16:12:31,298][valid][INFO] - {"epoch": 4, "valid_loss": "1.001", "valid_nll_loss": "0.014", "valid_accuracy": "51.3", "valid_wps": "21039.3", "valid_wpb": "1069.6", "valid_bsz": "15.4", "valid_num_updates": "624", "valid_best_accuracy": "51.3"}
[2024-03-01 16:12:31,302][fairseq.checkpoint_utils][INFO] - Preparing to save checkpoint for epoch 4 @ 624 updates
[2024-03-01 16:12:31,303][fairseq.trainer][INFO] - Saving checkpoint to /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/outputs/2024-03-01/16-07-46/checkpoints/checkpoint_best.pt
[2024-03-01 16:12:37,458][fairseq.trainer][INFO] - Finished saving checkpoint to /mnt/c/Users/yifei/OneDrive/桌面/CS8803EML/eml-hw2/fairseq/outputs/2024-03-01/16-07-46/checkpoints/checkpoint_best.pt
